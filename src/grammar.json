{
  "name": "asm",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_statement"
      }
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "a_instruction"
        },
        {
          "type": "SYMBOL",
          "name": "c_instruction"
        },
        {
          "type": "SYMBOL",
          "name": "label"
        }
      ]
    },
    "a_instruction": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "@"
            },
            {
              "type": "SYMBOL",
              "name": "constant"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "@"
            },
            {
              "type": "SYMBOL",
              "name": "symbol"
            }
          ]
        }
      ]
    },
    "c_instruction": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "destination"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "compute"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ";"
                },
                {
                  "type": "SYMBOL",
                  "name": "jump"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "destination": {
      "type": "PATTERN",
      "value": "[ADM]{1,3}="
    },
    "equals": {
      "type": "STRING",
      "value": "="
    },
    "compute": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "0"
        },
        {
          "type": "STRING",
          "value": "1"
        },
        {
          "type": "STRING",
          "value": "-1"
        },
        {
          "type": "STRING",
          "value": "D"
        },
        {
          "type": "STRING",
          "value": "A"
        },
        {
          "type": "STRING",
          "value": "M"
        },
        {
          "type": "STRING",
          "value": "!D"
        },
        {
          "type": "STRING",
          "value": "!A"
        },
        {
          "type": "STRING",
          "value": "!M"
        },
        {
          "type": "STRING",
          "value": "-D"
        },
        {
          "type": "STRING",
          "value": "-A"
        },
        {
          "type": "STRING",
          "value": "-M"
        },
        {
          "type": "STRING",
          "value": "D+1"
        },
        {
          "type": "STRING",
          "value": "A+1"
        },
        {
          "type": "STRING",
          "value": "M+1"
        },
        {
          "type": "STRING",
          "value": "D-1"
        },
        {
          "type": "STRING",
          "value": "A-1"
        },
        {
          "type": "STRING",
          "value": "M-1"
        },
        {
          "type": "STRING",
          "value": "D+A"
        },
        {
          "type": "STRING",
          "value": "D+M"
        },
        {
          "type": "STRING",
          "value": "D-A"
        },
        {
          "type": "STRING",
          "value": "D-M"
        },
        {
          "type": "STRING",
          "value": "A-D"
        },
        {
          "type": "STRING",
          "value": "M-D"
        },
        {
          "type": "STRING",
          "value": "D&A"
        },
        {
          "type": "STRING",
          "value": "D&M"
        },
        {
          "type": "STRING",
          "value": "D|A"
        },
        {
          "type": "STRING",
          "value": "D|M"
        }
      ]
    },
    "jump": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "JGT"
        },
        {
          "type": "STRING",
          "value": "JEQ"
        },
        {
          "type": "STRING",
          "value": "JGE"
        },
        {
          "type": "STRING",
          "value": "JLT"
        },
        {
          "type": "STRING",
          "value": "JNE"
        },
        {
          "type": "STRING",
          "value": "JLE"
        },
        {
          "type": "STRING",
          "value": "JMP"
        }
      ]
    },
    "label": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "constant": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "symbol": {
      "type": "PATTERN",
      "value": "[a-zA-Z_\\.$:][a-zA-Z_.$:\\d]*"
    },
    "_comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "//"
              },
              {
                "type": "PATTERN",
                "value": "(\\\\+(.|\\r?\\n)|[^\\\\\\n])*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "/*"
              },
              {
                "type": "PATTERN",
                "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
              },
              {
                "type": "STRING",
                "value": "/"
              }
            ]
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s|\\\\\\r?\\n"
    },
    {
      "type": "SYMBOL",
      "name": "_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
